---------CREATE A NEW DATABASE AND ADD USEFUL VIEWS OF DATA TO THE DATABASE



USE DATABASE NSS_DATA_ANALYSIS_<<YOUR_DATABASE_NUMBER>>;

CREATE OR REPLACE SCHEMA CURATED;

CREATE OR REPLACE VIEW HEALTH_BOARDS AS SELECT * FROM NSS_HANDS_ON_LAB_DATASETS.RAW.HEALTH_BOARDS;

CREATE OR REPLACE VIEW IMD_2020 AS SELECT * FROM NSS_HANDS_ON_LAB_DATASETS.RAW.IMD_2020;

CREATE OR REPLACE VIEW UK_VEHICLE_ACCIDENTS AS SELECT * FROM NSS_HANDS_ON_LAB_DATASETS.RAW.UK_VEHICLE_ACCIDENTS;

CREATE OR REPLACE VIEW POSTCODES AS SELECT * FROM NSS_HANDS_ON_LAB_DATASETS.RAW.POSTCODES;

CREATE OR REPLACE VIEW MET_OFFICE_WEATHER_IN_2021 AS SELECT * FROM NSS_HANDS_ON_LAB_DATASETS.RAW.MET_OFFICE_WEATHER_IN_2021;

---ALSO DECIDED TO CREATE A TABLE BASED ON ONE OF THE SCRIPTS


CREATE OR REPLACE TABLE CASUALTIES_BY_HEALTH_BOARD AS 


SELECT HEALTH_BOARD_NAME, B.VALUE CASUALTY_TYPE, COUNT(*) CASUALTIES FROM (

SELECT A.*, B.* EXCLUDE ACCIDENT_INDEX FROM (

SELECT A.* EXCLUDE GEOGRAPHY,B.ACCIDENT_INDEX FROM (

SELECT GEOGRAPHY,HEALTH_BOARD_CODE, HEALTH_BOARD_NAME FROM CURATED.HEALTH_BOARDS

) A


INNER JOIN 


CURATED.UK_VEHICLE_ACCIDENTS B ON ST_WITHIN(B.POINT,A.GEOGRAPHY)

) A

INNER JOIN NSS_HANDS_ON_LAB_DATASETS.RAW.UK_VEHICLE_CASUALTIES B ON A.ACCIDENT_INDEX = B.ACCIDENT_INDEX

) A 

INNER JOIN (SELECT * FROM NSS_HANDS_ON_LAB_DATASETS.RAW.UK_VEHICLE_LOOKUPS WHERE DATASET = 'Casualty' AND FIELD = 'casualty_type') B

ON A.CASUALTY_TYPE = B.CODE GROUP BY ALL;

CREATE OR REPLACE TABLE INDICIES_OF_DEPRIVATION AS 

SELECT A.* EXCLUDE GEOGRAPHY,B.* EXCLUDE GEOGRAPHY FROM (

SELECT GEOGRAPHY,HEALTH_BOARD_CODE, HEALTH_BOARD_NAME FROM NSS_HANDS_ON_LAB_DATASETS.RAW.HEALTH_BOARDS

) A


INNER JOIN 


NSS_HANDS_ON_LAB_DATASETS.RAW.IMD_2020 B ON ST_DWITHIN(B.GEOGRAPHY,A.GEOGRAPHY,20);


SELECT * FROM INDICIES_OF_DEPRIVATION;



-------create a function

------creating a function 


CREATE OR REPLACE FUNCTION ACCIDENTS_NEAR_HOSPITALS(distance NUMBER, hospital_name VARCHAR)

RETURNS TABLE (

ACCIDENT_INDEX varchar,
ACCIDNT_YEAR number,
DATE date,
TIME time,
LATITUDE float,
LONGITUDE float,
HOSPITAL_NAME varchar )

as $$

SELECT ACCIDENT_INDEX,ACCIDENT_YEAR,DATE,TIME,A.LATITUDE,A.LONGITUDE,"HospitalName"  FROM (

SELECT * FROM NSS_HANDS_ON_LAB_DATASETS.RAW.UK_VEHICLE_ACCIDENTS) A


INNER JOIN



(SELECT * EXCLUDE LATITUDE,LONGITUDE FROM (



SELECT A."Postcode",LATITUDE,LONGITUDE,"Point","HospitalName" FROM 
NSS_HANDS_ON_LAB_DATASETS.RAW.POSTCODES A RIGHT JOIN

(SELECT "HospitalCode","HospitalName","Postcode" FROM 


NSS_HANDS_ON_LAB_DATASETS.RAW.HOSPITALS WHERE "HospitalName" like hospital_name) B

ON A."Postcode" = B."Postcode" ) ) B 


ON

ST_DWITHIN(A.POINT,B."Point",distance) $$;



SELECT * FROM TABLE (ACCIDENTS_NEAR_HOSPITALS(500, 'Dundee Dental Hospital'));









-----SIMPLE TIME TRAVEL

----TABLE DROPPING AND RESTORING
SELECT * FROM CASUALTIES_BY_HEALTH_BOARD;
DROP TABLE CASUALTIES_BY_HEALTH_BOARD;
SELECT * FROM CASUALTIES_BY_HEALTH_BOARDL;
UNDROP TABLE CASUALTIES_BY_HEALTH_BOARD;
SELECT * FROM CASUALTIES_BY_HEALTH_BOARD;


----DATABASE DROPPING AND RESTORING

DROP DATABASE NSS_DATA_ANALYSIS_<<DATABASE_NUMBER>>;
USE DATABASE NSS_DATA_ANALYSIS_<<DATABASE_NUMBER>>;
UNDROP DATABASE NSS_DATA_ANALYSIS_<<DATABASE_NUMBER>>;
USE DATABASE NSS_DATA_ANALYSIS_<<DATABASE_NUMBER>>;
USE SCHEMA CURATED;
SELECT * FROM CASUALTIES_BY_HEALTH_BOARD;

----CLONING A DATABASE


CREATE DATABASE NSS_DATA_ANALYSIS_<<DATABASE_NUMBER>>_CLONE CLONE NSS_DATA_NALYSIS_<<DATABASE_NUMBER>>;